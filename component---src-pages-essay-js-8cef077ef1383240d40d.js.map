{"version":3,"sources":["webpack:///./src/pages/essay.js","webpack:///./src/components/list.js"],"names":["Essay","props","flexDirection","m","justifyContent","alignItems","color","fontSize","mb","href","style","borderBottom","textDecoration","pageQuery","boxShadow","opacity","Posts","data","location","isTagPage","pageContext","useState","DEFAULT_SHOW_COUNT","showCount","setShowCount","posts","get","totalCount","siteDescription","useEffect","handleScroll","document","querySelectorAll","forEach","elem","triggerDiff","getBoundingClientRect","top","window","innerHeight","isElementUnderBottom","transform","addEventListener","removeEventListener","showPosts","useMemo","filter","_","index","meta","name","content","justify-content","align-items","lineHeight","textAlign","tag","as","listStyle","marginLeft","map","node","title","fields","slug","StyledPost","key","className","to","dangerouslySetInnerHTML","__html","excerpt","width","frontmatter","date","length","mt","StyledShowMoreButton","fontWeight","p","bg","onClick","styled","Button","Box"],"mappings":"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","file":"component---src-pages-essay-js-8cef077ef1383240d40d.js","sourcesContent":["import React from 'react';\nimport { graphql } from 'gatsby';\nimport Posts from '../components/list';\nimport { Flex, Text } from 'rebass';\n\nexport default function Essay(props) {\n  return (\n    <>\n      <Flex\n        flexDirection=\"column\"\n        m=\"100px 20px 0px\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        color=\"#aaa\"\n        fontSize=\"13px\"\n      >\n        <Text mb=\"5px\">더이상 이 블로그에서 에세이를 쓰지 않습니다.</Text>\n        <Text>\n          에세이는{' '}\n          <a\n            href=\"https://brunch.co.kr/@blueshw83\"\n            style={{\n              borderBottom: '3px solid #d7c3ee',\n              color: '#aaa',\n              textDecoration: 'none',\n            }}\n          >\n            브런치\n          </a>\n          에서 읽어주세요.\n        </Text>\n      </Flex>\n      <Posts {...props} />\n    </>\n  );\n}\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n        description\n      }\n    }\n    allMarkdownRemark(\n      filter: {\n        frontmatter: {\n          category: { in: [\"essay\", \"review\"] }\n          draft: { ne: true }\n        }\n      }\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      totalCount\n      edges {\n        node {\n          excerpt(truncate: true)\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"DD MMMM, YYYY\")\n            title\n            category\n          }\n        }\n      }\n    }\n  }\n`;\n","import React, { useState, useMemo, useEffect } from 'react';\nimport { Link } from 'gatsby';\nimport Layout from '../components/layout';\nimport { Box, Text, Flex, Button } from 'rebass';\nimport get from 'lodash/get';\nimport { Helmet } from 'react-helmet';\nimport styled from 'styled-components';\n\nexport default function Posts({ data, location, isTagPage, pageContext }) {\n  const [showCount, setShowCount] = useState(DEFAULT_SHOW_COUNT);\n  const posts = get(data, 'allMarkdownRemark.edges');\n  const totalCount = get(data, 'allMarkdownRemark.totalCount');\n  const siteDescription = get(data, 'site.siteMetadata.description');\n\n  useEffect(() => {\n    setShowCount(DEFAULT_SHOW_COUNT);\n  }, [posts]);\n\n  useEffect(() => {\n    function isElementUnderBottom(elem, triggerDiff) {\n      const { top } = elem.getBoundingClientRect();\n      const { innerHeight } = window;\n      return top > innerHeight + (triggerDiff || 0);\n    }\n    function handleScroll() {\n      const elems = document.querySelectorAll('.up-on-scroll');\n      elems.forEach((elem) => {\n        if (isElementUnderBottom(elem, 20)) {\n          elem.style.opacity = '0';\n          elem.style.transform = 'translateY(70px)';\n        } else {\n          elem.style.opacity = '1';\n          elem.style.transform = 'translateY(0px)';\n        }\n      });\n    }\n    window.addEventListener('scroll', handleScroll);\n    return () => window.removeEventListener('scroll', handleScroll);\n  }, []);\n\n  const showPosts = useMemo(\n    () => posts.filter((_, index) => index < showCount),\n    [showCount, posts]\n  );\n\n  return (\n    <Layout location={location} data={data}>\n      <Helmet meta={[{ name: 'description', content: siteDescription }]} />\n      {isTagPage && (\n        <Flex\n          m=\"20px auto 60px\"\n          flexDirection=\"column\"\n          justify-content=\"center\"\n          align-items=\"center\"\n        >\n          <Text fontSize=\"25px\" lineHeight=\"1.6\" textAlign=\"center\">\n            {pageContext.tag}\n          </Text>\n          <Text fontSize=\"15px\" color=\"#888\" textAlign=\"center\">\n            ({totalCount})\n          </Text>\n        </Flex>\n      )}\n      <Box as=\"ul\" style={{ listStyle: 'none', marginLeft: 0 }}>\n        {showPosts.map(({ node }) => {\n          const title = get(node, 'frontmatter.title') || node.fields.slug;\n          return (\n            <StyledPost\n              as=\"li\"\n              mb=\"50px\"\n              key={node.fields.slug}\n              className=\"up-on-scroll\"\n            >\n              <Link css={{ boxShadow: 'none' }} to={node.fields.slug}>\n                <Text as=\"span\" mb=\"15px\" fontSize=\"22px\" lineHeight=\"1.7\">\n                  {title}\n                </Text>\n              </Link>\n              <Text\n                fontSize=\"15px\"\n                lineHeight=\"1.8\"\n                color=\"#999\"\n                mb=\"6px\"\n                dangerouslySetInnerHTML={{ __html: node.excerpt }}\n              />\n              <Text\n                fontSize=\"14px\"\n                mb=\"5px\"\n                color=\"#888\"\n                width=\"100%\"\n                textAlign=\"right\"\n                css={{ opacity: 0.8 }}\n              >\n                {node.frontmatter.date}\n              </Text>\n            </StyledPost>\n          );\n        })}\n      </Box>\n      {showCount <= posts.length && (\n        <Flex mt=\"70px\" width=\"100%\" justifyContent=\"center\">\n          <StyledShowMoreButton\n            fontSize=\"18px\"\n            fontWeight=\"400\"\n            color=\"#999\"\n            p=\"5px 10px\"\n            bg=\"transparent\"\n            onClick={() => setShowCount(showCount + 25)}\n          >\n            show more\n          </StyledShowMoreButton>\n        </Flex>\n      )}\n    </Layout>\n  );\n}\nconst StyledShowMoreButton = styled(Button)`\n  border-radius: 4px;\n  border: 1px solid #dedede;\n  cursor: pointer;\n  transition: all 0.7s;\n  outline: none;\n  &:hover {\n    background-color: #bbb;\n    color: #fff;\n    border: 1px solid transparent;\n  }\n`;\nconst StyledPost = styled(Box)`\n  transition: transform 0.7s, opacity 0.7s;\n`;\nconst DEFAULT_SHOW_COUNT = 25;\n"],"sourceRoot":""}