{"version":3,"sources":["webpack:///./src/components/Layout.js","webpack:///./src/components/list.js","webpack:///./src/components/css/List.module.scss","webpack:///./src/pages/gatsby.js"],"names":["Template","props","children","data","useState","showMenu","setShowMenu","showHeader","setShowHeader","siteTitle","get","prevScrollY","setPrevScrollY","useEffect","handleScroll","curScrollY","window","pageYOffset","document","addEventListener","removeEventListener","className","s","container","htmlAttributes","lang","title","name","content","onClick","onClickMenu","cn","contentWrapper","Posts","location","isTagPage","pageContext","DEFAULT_SHOW_COUNT","showCount","setShowCount","posts","totalCount","siteDescription","querySelectorAll","forEach","elem","triggerDiff","getBoundingClientRect","top","innerHeight","isElementUnderBottom","style","opacity","transform","showPosts","useMemo","filter","_","index","meta","push","tagPageTitleWrapper","tagName","tag","list","map","node","fields","slug","key","boxShadow","to","desc","dangerouslySetInnerHTML","__html","excerpt","date","frontmatter","length","moreWrapper","moreButton","module","exports","Essay","pageQuery"],"mappings":"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","file":"component---src-pages-gatsby-js-d1e99aa1a3e8b9f380ea.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Header from './Header';\nimport '../common/css/reset.scss';\nimport 'prismjs/themes/prism-tomorrow.css';\nimport '../common/css/common.scss';\nimport OutsideClick from './OutsideClick';\nimport { Helmet } from 'react-helmet';\nimport get from 'lodash/get';\nimport s from './css/Layout.module.scss';\nimport cn from 'classnames';\n\nexport default function Template(props) {\n  const { children, data } = props;\n  const [showMenu, setShowMenu] = useState(false);\n  const [showHeader, setShowHeader] = useState(true);\n  const siteTitle = get(data, 'site.siteMetadata.title');\n  const [prevScrollY, setPrevScrollY] = useState(0);\n\n  useEffect(() => {\n    const handleScroll = () => {\n      const curScrollY = window.pageYOffset;\n      if (curScrollY > 80 && prevScrollY < curScrollY && showHeader) {\n        setShowHeader(false);\n      } else if (\n        (curScrollY <= 80 || prevScrollY > curScrollY) &&\n        !showHeader\n      ) {\n        setShowHeader(true);\n      }\n      showMenu && setShowMenu(false);\n      setPrevScrollY(window.pageYOffset);\n    };\n    document.addEventListener('scroll', handleScroll);\n    return () => {\n      document.removeEventListener('scroll', handleScroll);\n    };\n  }, [prevScrollY]);\n  return (\n    <div className={s.container}>\n      <Helmet htmlAttributes={{ lang: 'ko' }} title={siteTitle}>\n        <meta\n          name=\"google-site-verification\"\n          content=\"R3ZeY1PmaJUY9j_cgNABjesJFgHWVCJpb4TsdfXntMA\"\n        />\n        <meta\n          name=\"naver-site-verification\"\n          content=\"23eddf7267bb527337927baff11fc26157637f30\"\n        />\n      </Helmet>\n      <OutsideClick onClick={() => setShowMenu(false)}>\n        <Header\n          {...props}\n          showMenu={showMenu}\n          showHeader={showHeader}\n          onClickMenu={() => setShowMenu(!showMenu)}\n        />\n      </OutsideClick>\n      <main className={cn(s.contentWrapper, 'contents')}>{children}</main>\n    </div>\n  );\n}\n","import React, { useState, useMemo, useEffect } from 'react';\nimport { Link } from 'gatsby';\nimport Layout from './Layout';\nimport get from 'lodash/get';\nimport { Helmet } from 'react-helmet';\nimport s from './css/List.module.scss';\n\nexport default function Posts({ data, location, isTagPage, pageContext }) {\n  const [showCount, setShowCount] = useState(DEFAULT_SHOW_COUNT);\n  const posts = get(data, 'allMarkdownRemark.edges');\n  const totalCount = get(data, 'allMarkdownRemark.totalCount');\n  const siteDescription = get(data, 'site.siteMetadata.description');\n\n  useEffect(() => {\n    setShowCount(DEFAULT_SHOW_COUNT);\n  }, [posts]);\n\n  useEffect(() => {\n    function isElementUnderBottom(elem, triggerDiff) {\n      const { top } = elem.getBoundingClientRect();\n      const { innerHeight } = window;\n      return top > innerHeight + (triggerDiff || 0);\n    }\n    function handleScroll() {\n      const elems = document.querySelectorAll('.up-on-scroll');\n      elems.forEach((elem) => {\n        if (isElementUnderBottom(elem, 20)) {\n          elem.style.opacity = '0';\n          elem.style.transform = 'translateY(70px)';\n        } else {\n          elem.style.opacity = '1';\n          elem.style.transform = 'translateY(0px)';\n        }\n      });\n    }\n    window.addEventListener('scroll', handleScroll);\n    return () => window.removeEventListener('scroll', handleScroll);\n  }, []);\n\n  const showPosts = useMemo(\n    () => posts.filter((_, index) => index < showCount),\n    [showCount, posts]\n  );\n\n  const meta = [{ name: 'description', content: siteDescription }];\n  isTagPage && meta.push({ name: 'robots', content: 'noindex' });\n\n  return (\n    <Layout location={location} data={data}>\n      <Helmet meta={meta} />\n      {isTagPage && (\n        <div className={s.tagPageTitleWrapper}>\n          <div className={s.tagName}>{pageContext.tag}</div>\n          <div className={s.tagName}>({totalCount})</div>\n        </div>\n      )}\n      <ul className={s.list}>\n        {showPosts.map(({ node }) => {\n          const title = get(node, 'frontmatter.title') || node.fields.slug;\n          return (\n            <li className=\"up-on-scroll\" key={node.fields.slug}>\n              <Link style={{ boxShadow: 'none' }} to={node.fields.slug}>\n                <span className={s.title}>{title}</span>\n              </Link>\n              <div\n                className={s.desc}\n                dangerouslySetInnerHTML={{ __html: node.excerpt }}\n              />\n              <div className={s.date}>{node.frontmatter.date}</div>\n            </li>\n          );\n        })}\n      </ul>\n      {showCount <= posts.length && (\n        <div className={s.moreWrapper}>\n          <button\n            className={s.moreButton}\n            onClick={() => setShowCount(showCount + 25)}\n          >\n            show more\n          </button>\n        </div>\n      )}\n    </Layout>\n  );\n}\nconst DEFAULT_SHOW_COUNT = 25;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tagPageTitleWrapper\":\"List-module--tagPageTitleWrapper--3Mlg_\",\"tagName\":\"List-module--tagName--3DxeQ\",\"tagTotalCount\":\"List-module--tagTotalCount--20UpO\",\"list\":\"List-module--list--3G8Ef\",\"title\":\"List-module--title--rR4PY\",\"desc\":\"List-module--desc--3YbeF\",\"date\":\"List-module--date--qJ1Or\",\"moreWrapper\":\"List-module--moreWrapper--3becS\",\"moreButton\":\"List-module--moreButton--rj2eT\"};","import React from 'react';\nimport { graphql } from 'gatsby';\nimport Posts from '../components/list';\n\nexport default function Essay(props) {\n  return <Posts {...props} />;\n}\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n        description\n      }\n    }\n    allMarkdownRemark(\n      filter: {\n        frontmatter: { category: { eq: \"gatsby\" }, draft: { ne: true } }\n      }\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      totalCount\n      edges {\n        node {\n          excerpt(truncate: true)\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"DD MMMM, YYYY\")\n            title\n            category\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}