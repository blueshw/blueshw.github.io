{"version":3,"sources":["webpack:///./src/templates/tag.js","webpack:///./src/components/list.js"],"names":["Tag","props","isTagPage","pageQuery","boxShadow","opacity","Posts","data","location","pageContext","useState","DEFAULT_SHOW_COUNT","showCount","setShowCount","posts","get","totalCount","siteDescription","useEffect","handleScroll","document","querySelectorAll","forEach","elem","triggerDiff","getBoundingClientRect","top","window","innerHeight","isElementUnderBottom","style","transform","addEventListener","removeEventListener","showPosts","useMemo","filter","_","index","meta","name","content","m","flexDirection","justify-content","align-items","fontSize","lineHeight","textAlign","tag","color","as","map","node","title","fields","slug","StyledPost","mb","key","className","to","dangerouslySetInnerHTML","__html","excerpt","width","frontmatter","date","length","mt","justifyContent","StyledShowMoreButton","fontWeight","p","bg","onClick","styled","Button","Box"],"mappings":"oOAIe,SAASA,EAAIC,GAC1B,OAAO,kBAAC,IAAD,iBAAWA,EAAX,CAAkBC,WAAW,KAE/B,IAAMC,EAAS,c,4RCmEK,CAAEC,UAAW,S,qGAiBnB,CAAEC,QAAS,KAnFjB,SAASC,EAAT,GAA4D,IAA3CC,EAA0C,EAA1CA,KAAMC,EAAoC,EAApCA,SAAUN,EAA0B,EAA1BA,UAAWO,EAAe,EAAfA,YAAe,EACtCC,mBAASC,GAApCC,EADiE,KACtDC,EADsD,KAElEC,EAAQC,IAAIR,EAAM,2BAClBS,EAAaD,IAAIR,EAAM,gCACvBU,EAAkBF,IAAIR,EAAM,iCAElCW,qBAAU,WACRL,EAAaF,KACZ,CAACG,IAEJI,qBAAU,WAMR,SAASC,IACOC,SAASC,iBAAiB,iBAClCC,SAAQ,SAAAC,IAPhB,SAA8BA,EAAMC,GAGlC,OAFgBD,EAAKE,wBAAbC,IACgBC,OAAhBC,aACoBJ,GAAe,GAKrCK,CAAqBN,EAAM,KAI7BA,EAAKO,MAAMzB,QAAU,IACrBkB,EAAKO,MAAMC,UAAY,oBAJvBR,EAAKO,MAAMzB,QAAU,IACrBkB,EAAKO,MAAMC,UAAY,uBAQ7B,OADAJ,OAAOK,iBAAiB,SAAUb,GAC3B,kBAAMQ,OAAOM,oBAAoB,SAAUd,MACjD,IAEH,IAAMe,EAAYC,mBAChB,kBAAMrB,EAAMsB,QAAO,SAACC,EAAGC,GAAJ,OAAcA,EAAQ1B,OACzC,CAACA,EAAWE,IAGd,OACE,kBAAC,IAAD,CAAQN,SAAUA,EAAUD,KAAMA,GAChC,kBAAC,IAAD,CAAQgC,KAAM,CAAC,CAAEC,KAAM,cAAeC,QAASxB,MAC9Cf,GACC,kBAAC,OAAD,CACEwC,EAAE,iBACFC,cAAc,SACdC,kBAAgB,SAChBC,cAAY,UAEZ,kBAAC,OAAD,CAAMC,SAAS,OAAOC,WAAW,MAAMC,UAAU,UAC9CvC,EAAYwC,KAEf,kBAAC,OAAD,CAAMH,SAAS,OAAOI,MAAM,OAAOF,UAAU,UAA7C,IACIhC,EADJ,MAKJ,kBAAC,MAAD,CAAKmC,GAAG,WACLjB,EAAUkB,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACVC,EAAQvC,IAAIsC,EAAM,sBAAwBA,EAAKE,OAAOC,KAC5D,OACE,kBAACC,EAAD,CACEN,GAAG,UACHO,GAAG,OACHC,IAAKN,EAAKE,OAAOC,KACjBI,UAAU,gBAEV,kBAAC,OAAD,CAAMF,GAAG,OAAOZ,SAAS,OAAOC,WAAW,OACzC,qBAAkCc,GAAIR,EAAKE,OAAOC,MAC/CF,IAGL,kBAAC,OAAD,CACER,SAAS,OACTC,WAAW,MACXG,MAAM,OACNQ,GAAG,MACHI,wBAAyB,CAAEC,OAAQV,EAAKW,WAE1C,qBACElB,SAAS,OACTY,GAAG,MACHR,MAAM,OACNe,MAAM,OACNjB,UAAU,SAGTK,EAAKa,YAAYC,WAM3BvD,GAAaE,EAAMsD,QAClB,kBAAC,OAAD,CAAMC,GAAG,OAAOJ,MAAM,OAAOK,eAAe,UAC1C,kBAACC,EAAD,CACEzB,SAAS,OACT0B,WAAW,MACXtB,MAAM,OACNuB,EAAE,WACFC,GAAG,cACHC,QAAS,kBAAM9D,EAAaD,EAAY,MAN1C,eAeV,IAAM2D,EAAuBK,kBAAOC,UAAV,iFAAGD,CAAH,wKAYpBnB,EAAamB,kBAAOE,OAAV,uEAAGF,CAAH,6CAGVjE,EAAqB","file":"component---src-templates-tag-js-181498035a73074edbe5.js","sourcesContent":["import React from 'react';\nimport { graphql } from 'gatsby';\nimport Posts from '../components/list';\n\nexport default function Tag(props) {\n  return <Posts {...props} isTagPage={true} />;\n}\nexport const pageQuery = graphql`\n  query($tag: String) {\n    site {\n      siteMetadata {\n        title\n        description\n      }\n    }\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          excerpt(truncate: true)\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"DD MMMM, YYYY\")\n            title\n          }\n        }\n      }\n    }\n  }\n`;\n","import React, { useState, useMemo, useEffect } from 'react';\nimport { Link } from 'gatsby';\nimport Layout from '../components/layout';\nimport { Box, Text, Flex, Button } from 'rebass';\nimport get from 'lodash/get';\nimport Helmet from 'react-helmet';\nimport styled from 'styled-components';\n\nexport default function Posts({ data, location, isTagPage, pageContext }) {\n  const [showCount, setShowCount] = useState(DEFAULT_SHOW_COUNT);\n  const posts = get(data, 'allMarkdownRemark.edges');\n  const totalCount = get(data, 'allMarkdownRemark.totalCount');\n  const siteDescription = get(data, 'site.siteMetadata.description');\n\n  useEffect(() => {\n    setShowCount(DEFAULT_SHOW_COUNT);\n  }, [posts]);\n\n  useEffect(() => {\n    function isElementUnderBottom(elem, triggerDiff) {\n      const { top } = elem.getBoundingClientRect();\n      const { innerHeight } = window;\n      return top > innerHeight + (triggerDiff || 0);\n    }\n    function handleScroll() {\n      const elems = document.querySelectorAll('.up-on-scroll');\n      elems.forEach(elem => {\n        if (isElementUnderBottom(elem, 20)) {\n          elem.style.opacity = '0';\n          elem.style.transform = 'translateY(70px)';\n        } else {\n          elem.style.opacity = '1';\n          elem.style.transform = 'translateY(0px)';\n        }\n      });\n    }\n    window.addEventListener('scroll', handleScroll);\n    return () => window.removeEventListener('scroll', handleScroll);\n  }, []);\n\n  const showPosts = useMemo(\n    () => posts.filter((_, index) => index < showCount),\n    [showCount, posts]\n  );\n\n  return (\n    <Layout location={location} data={data}>\n      <Helmet meta={[{ name: 'description', content: siteDescription }]} />\n      {isTagPage && (\n        <Flex\n          m=\"20px auto 60px\"\n          flexDirection=\"column\"\n          justify-content=\"center\"\n          align-items=\"center\"\n        >\n          <Text fontSize=\"25px\" lineHeight=\"1.6\" textAlign=\"center\">\n            {pageContext.tag}\n          </Text>\n          <Text fontSize=\"15px\" color=\"#888\" textAlign=\"center\">\n            ({totalCount})\n          </Text>\n        </Flex>\n      )}\n      <Box as=\"section\">\n        {showPosts.map(({ node }) => {\n          const title = get(node, 'frontmatter.title') || node.fields.slug;\n          return (\n            <StyledPost\n              as=\"article\"\n              mb=\"50px\"\n              key={node.fields.slug}\n              className=\"up-on-scroll\"\n            >\n              <Text mb=\"15px\" fontSize=\"22px\" lineHeight=\"1.7\">\n                <Link css={{ boxShadow: 'none' }} to={node.fields.slug}>\n                  {title}\n                </Link>\n              </Text>\n              <Text\n                fontSize=\"15px\"\n                lineHeight=\"1.8\"\n                color=\"#999\"\n                mb=\"6px\"\n                dangerouslySetInnerHTML={{ __html: node.excerpt }}\n              />\n              <Text\n                fontSize=\"14px\"\n                mb=\"5px\"\n                color=\"#888\"\n                width=\"100%\"\n                textAlign=\"right\"\n                css={{ opacity: 0.8 }}\n              >\n                {node.frontmatter.date}\n              </Text>\n            </StyledPost>\n          );\n        })}\n      </Box>\n      {showCount <= posts.length && (\n        <Flex mt=\"70px\" width=\"100%\" justifyContent=\"center\">\n          <StyledShowMoreButton\n            fontSize=\"18px\"\n            fontWeight=\"400\"\n            color=\"#999\"\n            p=\"5px 10px\"\n            bg=\"transparent\"\n            onClick={() => setShowCount(showCount + 25)}\n          >\n            show more\n          </StyledShowMoreButton>\n        </Flex>\n      )}\n    </Layout>\n  );\n}\nconst StyledShowMoreButton = styled(Button)`\n  border-radius: 4px;\n  border: 1px solid #dedede;\n  cursor: pointer;\n  transition: all 0.7s;\n  outline: none;\n  &:hover {\n    background-color: #bbb;\n    color: #fff;\n    border: 1px solid transparent;\n  }\n`;\nconst StyledPost = styled(Box)`\n  transition: transform 0.7s, opacity 0.7s;\n`;\nconst DEFAULT_SHOW_COUNT = 25;\n"],"sourceRoot":""}