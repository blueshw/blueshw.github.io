{"componentChunkName":"component---src-templates-tag-js","path":"/tag/python","result":{"data":{"site":{"siteMetadata":{"title":"bono blog","description":"프론트엔드 엔지니어. 글을 씁니다."}},"allMarkdownRemark":{"totalCount":11,"edges":[{"node":{"excerpt":"장고 프로젝트는 다양한 방법으로 구현이 가능합니다.\n그 중에서 view 에서 처리할 수 있는 방법으로 크게 두 가지가 있는데,\n하나는 함수를 기반으로 만드는 방법, 그리고 또 한가지는 클래스를 기반으로 만드는 방법입니다. 지금까지 장고를 사용하면서 …","fields":{"slug":"/2016/03/08/django-extend-view-using-mixin/"},"frontmatter":{"date":"08 March, 2016","title":"[django] Mixin을 이용한 View 확장하기"}}},{"node":{"excerpt":"장고 프로젝트 역시 다른 웹 프레임워크와 마찬가지로 모듈의 로직을 검증하기 위한 유닛테스트가 존재합니다.\n테스트를 위한 추가적인 모듈을 설치해서 좀더 편리하게 유닛테스트를 진행할 수도 있지만,\n일단은 장고에서 기본적으로 지원하는 테스트 기능을 이용해…","fields":{"slug":"/2016/03/06/django-unit-test-without-testdb/"},"frontmatter":{"date":"06 March, 2016","title":"[django] 테스트DB 없이 유닛테스트(unit test)하기"}}},{"node":{"excerpt":"웹 개발을 하다보면, html 코드 상에서 다양한 연산을 해야하는 경우가 발생합니다.\n그래서 php, jsp, asp, jade 등 각 언어별 웹 프레임워크에서 이와 같은 경우를 처리해주기 위한 기능을 제공하고 있습니다.\n장고(django) 템플릿(…","fields":{"slug":"/2016/03/03/django-using-custom-templatetags/"},"frontmatter":{"date":"03 March, 2016","title":"[django] 커스텀 템플릿태그(templatetags) 활용하기"}}},{"node":{"excerpt":"가장 먼저 써야할 글을 이제서야 작성하네요.\n여러 개발자들과 함께 장고(django)를 개발하기 위해서는 환경이 일치해야 합니다.\n특히 python2 와 python3 는 서로 문법이 다르기 때문에(이에 대해서도 포스팅해야 겠네요) 개발 환경을 맞추…","fields":{"slug":"/2016/03/01/django-virtual-env-setting-for-mac/"},"frontmatter":{"date":"01 March, 2016","title":"[django] 장고(django) 개발을 위한 파이썬(python) 가상환경 설정(Mac 환경)"}}},{"node":{"excerpt":"중복이 제거된 자료구조를 만들어야 할 일이 있어 set 을 쓰게 되었는데요.\nset 으로 만들어진 자료를 바탕으로 루프를 돌며 set 안의 item 들을 처리하는 작업이었습니다.\nitem 이 너무 많아지게 되면, 메모리 등의 성능 이슈가 발생할 것을…","fields":{"slug":"/2016/02/28/python-about-set/"},"frontmatter":{"date":"28 February, 2016","title":"[python] set에 관한 두가지 사실"}}},{"node":{"excerpt":"파이썬에서 모듈을 import 할때, 보통 파일 최상단(but, 메서드 내에서 지역적으로 import 가능)에 정의해서 쓰곤 합니다.\n그런데 최근에 작업하면서 여러 클래스를 하나의 메서드에서 처리하면 좋겠다는 부분이 생겼지요.\n그래서 생각한 끝에 클…","fields":{"slug":"/2016/02/24/python-import-by-class-name/"},"frontmatter":{"date":"24 February, 2016","title":"[python] 클래스 이름을 사용한 동적 모듈 import"}}},{"node":{"excerpt":"파이썬(python) + 장고(django)로 프로젝트를 진행하려고 하면, 우선 개발도구를 정해야 합니다. 콘솔 + VI 로 작업해도 무관합니다만 장고를 지원해주는 IDE 가 있다면 그 기능을 이용하는 것이 좋겠죠. 더불어 자동완성 등 다양한 기능을…","fields":{"slug":"/2016/02/02/django-setting-for-pycharm-community/"},"frontmatter":{"date":"02 February, 2016","title":"[django] pycharm(파이참) community 버전으로 django(장고) 프로젝트 설정"}}},{"node":{"excerpt":"코루틴의 개념을 살펴보기 전에 우선, 상반되는(반드시 상반된다고는 할 수 없지만..) 서브루틴에 대해서 한번 짚고 넘어가 보겠습니다.\n참고로 서브루틴의 상반되는 개념은 코루틴이 아닌 메인루틴(main-routine, 그냥 루틴이라고도 함)이라 할 수…","fields":{"slug":"/2016/01/25/python-co-routine-vs-sub-routine/"},"frontmatter":{"date":"25 January, 2016","title":"[python] 코루틴(co-routine), 서브루틴(sub-routine)과 비교"}}},{"node":{"excerpt":"여느 언어에나 코드 량을 줄이기 위한 다양한 기법들이 존재합니다.\n그 중에서 대표적인 것 중 하나인 3 항 연사자를 파이썬에서도 사용가능 합니다. 파이썬 언어의 장점 중에 하나가 타 언어에 비해 훨씬 적은 분량으로 똑같은 코드를 작성할 수 있는 것이…","fields":{"slug":"/2016/01/22/python-conditional-ternary-operator/"},"frontmatter":{"date":"22 January, 2016","title":"파이썬 3항 연산자 비교"}}},{"node":{"excerpt":"이번에는 객체의 복사에 대해서 알아보려고 합니다. 객체의 복사는 크게 얕은 복사(shallow copy)와 깊은 복사(deep copy)로 나뉩니다. 얼핏 들으면 단어 자체의 의미가 모호하게 느껴질 수도 있습니다만, 사실은 크게 어려운 개념은 아닙니…","fields":{"slug":"/2016/01/20/shallow-copy-deep-copy/"},"frontmatter":{"date":"20 January, 2016","title":"얕은 복사(shallow copy) vs 깊은 복사(deep copy)"}}},{"node":{"excerpt":"최근에 python + django 로 프로젝트를 진행하고 있습니다. 두달전부터 시작했으니 아직은 python, django 모두 초보라 할 수 있겠죠. 프로젝트를 같이 진행하는 동료들도 저 처럼 거의 저와 비슷한 상황입니다. 그러다보니 프로젝트를 …","fields":{"slug":"/2016/01/16/django-migration/"},"frontmatter":{"date":"16 January, 2016","title":"[django] 장고 트랜잭션 활용"}}}]}},"pageContext":{"tag":"python"}},"staticQueryHashes":[]}